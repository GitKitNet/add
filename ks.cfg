################ ks.cfg ################
################ minimal ###############
## version=DEVEL

## System authorization information
auth --enableshadow --passalgo=sha512

## Install OS instead of upgrade
install

## License agreement
eula --agreed

################################################
####    -Источник установки CDROM, СЕТЬ-    ####
################################################

## Use CDROM installation media  ##
cdrom
## Use network installation  ##
# url --url="https://mirror.yandex.ru/centos/7/os/x86_64"
# url --url="http://mirror.mirohost.net/centos/7/os/x86_64"
# url --url="http://mirrors.bytes.ua/centos/7/os/x86_64"


## Use graphical install
# graphical
## Use text mode install
text


## Run the Setup Agent on first boot ###
firstboot --enable
ignoredisk --only-use=sda
# group --name=ftp


################################################
####          -Языки, Раскладка-            №###
################################################

## Keyboard layouts
keyboard --vckeymap=us --xlayouts='us','ru' --switch='grp:ctrl_shift_toggle'

## System language
lang ru_UA.UTF-8


################################################
##   -Опция сетевого подключения, hostname-  ###
################################################

## Network information ##
# network  --bootproto=static --device=eth0 --gateway=192.168.1.2 --ip=192.168.1.10 --nameserver=192.168.1.2 --netmask=255.255.255.0 --ipv6=auto --activate
# network  --bootproto=static --device=enp1s6 --gateway=192.168.1.2 --ip=192.168.1.10 --nameserver=192.168.1.2 --netmask=255.255.255.0 --ipv6=auto --activate
# network  --bootproto=dhcp --device=enp1s6 --ipv6=auto --activate
network  --bootproto=dhcp --noipv6 --activate
network  --hostname=localhost.localdomain

## System timezone
timezone Europe/Kiev --isUtc --ntpservers=0.centos.pool.ntp.org,1.centos.pool.ntp.org,2.centos.pool.ntp.org,3.centos.pool.ntp.org,ua.pool.ntp.org

################################################
####  -Затем идут параметры пользователей-  ####
################################################
	
## rootpw —lock — запрет подключения к серверу root-ом
## Root password ###
# rootpw --lock
rootpw --iscrypted $6$f2n6gO8NYOQ/wI5.$zaDGRl7tO5GHu16KsdNtwWJcgj4nEnw3Ytjvwr591y48ABxWnazD/M.MsyiccOBqtGfrsgMoxaISS3YiOHhxb/

## User password
user --groups=wheel --name=admin --password=$6$YuSrk/AgCfc1C1n7$61Yg/tsJch5nTjZj0SH0YUOmK9rAMWan6TDGH1xi85lYAqTIChdgbsjh/in693mq7Bp/yk9d6vTL0VBJ0Ba7o1 --iscrypted --gecos="Admin"
	
## Пароль пользователя root и админ можно сгенерировать заранее";
#$ python -c "import crypt,random,string; print crypt.crypt(\"my_password\", '\$6\$' + ''.join([random.choice(string.ascii_letters + string.digits) for _ in range(16)]))" ;



################################################
####          -Add ssh user key-            ####
################################################

## ed25519 SSH key 
sshkey --username=root "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIKp3bxeApwQec9N6DaIP1Iq3o7Ks4jcL66wHi1YdqkFC root"
sshkey --username=admin "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIO3nyIJFszoNVmLolr3gV+yOJyCT+0ImsOH/C3rZloR4 admin"

## RSA SSHkey 
#sshkey --username=admin "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDZoXrV4vQeM3qxRni+CAA6i8+Cvr1ql+MxyUiZ/H7CbzVGZ4hlNuEW2dR6ItG5XAaYxHSCXjnRqBd5VonV9oD5wLNNc5GaPz12aC2W6qzWXyQqfiU6mH9isTTPtxVxSQ5WlbZhOYxx9yxFudciCoycOLHopsRgFNQWQvEuFiJu67qihxU8vUcyU0uxr2Y7qXcAYdzr/QFmfU5r+Lv99T7GaGBJl5jJF6PJ/7lROZR/d00kORD522s8ubej5eonK6KpOpfTYBTI3jf6hmuUte3gwArPEzessmgMOYAPXONz8qqTOLVjFiO6iuXp6ldx5qp0j8aE+iQj6+8NX47vLOhTP6uKEAGBR/MgaG77iJIEF2weA/Ew9n0zLI4eyBTgZY1+LD1pc0aMy7+KMa8+ef1SX34MurGef4y7MgAKFQ5hsuR12FMhYXkrT0+qJtWZXWW6uXqKXCDT6xoHvZw3ZLpoL29MBrDqCPnpxlhetsDDTDlh44VKcM3alxYSn+OjTFdLYcfuAAN9/WPi5sTbV9Qr8MgQY45LbPY2VF41qHC35UEklJqFj15xrr3R3FPzcfDIGOpqXCFmO/zO6FuPH1T3RK2iztGEAjcrVOhvNZ+AYQOzYJYxCwQeZ02H6eCd3Kfj151fUKQbhCwae0ZQG93wYoqPtasfL754q8TZowA1Rw== admin"
#sshkey --username=root "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC0zeUtIOS32Ja6dTLWyMfP3I3dObm6YWVKUak7z7KjGVuMg45xFgvg8+dzbbyH0O59I1Cxd8CsrVc7lnE1SoJqOs8N2RW82tXEfmBUlLurWmsYbGi0ZUrXnL0Yl95eiZeVQk+sLBynFfsVkbF/UCiHlkOK8srIZrXNtR8xHLQqZ+S/9EsLTOIqN2qc+5C0NNdZp1DPiMvTxq088ktNwAwt6kz4AWNxEV6OFvpFmXQhr9daDxgEXJ2WXQVSaJziEL9iDj9u4xNK17VXsSxK9fEk/qgBiiUd0mzZGNW1RVPaN6EkockTLtPtI/AiVWs3fQVCua5Guke/w4Ix/ycpcWQ3 root"


## System services ###
# services --disabled=autofs,alsa-state,avahi-daemon,bluetooth,pcscd,cachefilesd,colord,fancontrol,fcoe,firewalld,firstboot-graphical,gdm,httpd,initial-setup,initial-setup-text,initial-setup-graphical,initial-setup-reconfiguration,kdump,libstoragemgmt,ModemManager,tog-pegasus,tmp.mount,tuned \
#  --enabled=bacula-fd,chronyd,edac,gpm,numad,rsyslog,sendmail,smartd,sm-client,sssd,zabbix-agent		
	 # services --disabled=NetworkManager
services --enabled="chronyd"


## Firewall rule ##
# firewall --enabled --port=22822:tcp
# firewall --disabled --service=ssh



################################################
####   -Partition clearing information-     ####
################################################

## Повторном инициализировании диска (Рекоменд. при авто установке)
zerombr


################################################
####           -разбивка диска-             ####
################################################

## Disk partitioning information ##





%pre --interpreter=/usr/bin/bash --log=/tmp/kickstart_bash_pre-tmp.log
#!/usr/bin/bash --log=/tmp/kickstart_bash_pre-tmp.log
#======diskPart_pre.sh ####

outfile="/tmp/pre-part-include"
echo "# $(date +%Y%m%d_%k%M%S)" > $outfile
# Автоматическая розметка диска
autopart --type=lvm

CreatePartFile() {
	BOOTs=1024
	BIOSBOOTs=2
	SEC_Size=0
	MASTER=$(fdisk -l|grep -E "/dev/[v_h_s]d[a-z]:" -m 1 | awk '{print $2 }' | sed -e 's/\/dev\/sd/sd/g' -e 's/\://g'); echo $MASTER
	SLAVE=$(fdisk -l|grep -E "/dev/[v_h_s]d[a-z]:" -m 2 | grep -vi "$PRIMARY" | awk '{print $2 }' | sed -e 's/\/dev\/sd/sd/g' -e 's/\://g'); echo $SLAVE

	RAM="`free -m | grep Mem | awk '{print $2}'`"; echo "$RAM"
	SWAP_allowed=$(($RAM * 2)); echo "$SWAP_allowed"
	PRIMARY_Size="$(($(fdisk -l |grep -E "/dev/[v_h_s]d[a-z]:" -m 1 |awk '{print $5}') / 1024 / 1024))"; echo $PRIMARY_Size
	SEC_Size="$(($(fdisk -l |grep -E "/dev/[v_h_s]d[a-z]:" -m 2 | grep -vi "$PRIMARY" |awk '{print $5}') / 1024 / 1024))"; echo $SEC_Size
	ROOT_allowed=$(($PRIMARY_Size / 100 * 35)); echo $ROOT_allowed
	HOME_allowed=$(($PRIMARY_Size - $SWAP_allowed - $ROOT_allowed - $BOOTs - $BIOSBOOTs)); echo $HOME_allowed
	PRIMARY_allowed=$(($PRIMARY_Size - $SWAP_allowed - $BOOTs - $BIOSBOOTs)); echo $PRIMARY_allowed
	SWAP=$SWAP_allowed
	ROOTSIZE=$ROOT_allowed
	ROOT_SIZE=$PRIMARY_allowed
	HOMESIZE=HOME_allowed
	get_disktype=$1
	GET_DISKNU=$2
	if [ "$GET_DISKNU" -gt 1 ]; then
  

	if [ "$GET_DISKNU" -gt 1 ]; then
		echo "# 2 Disk partitioning" >> $outfile
		echo "clearpart --all --initlabel --drives=${MASTER}, ${SLAVE}" >> $outfile
		## System bootloader configuration
		echo "bootloader --append=" crashkernel=auto" --location=mbr --boot-drive=${MASTER}, ${SLAVE}" >> $outfile
		echo "part /boot     --fstype=ext4     --size=$BOOTs    --ondisk=${MASTER} --asprimary" >> $outfile
		#echo "part /biosboot --fstype=biosboot --size=$BIOSBOOTs    --ondisk=${MASTER} --asprimary" >> $outfile
		echo "part swap      --fstype=swap     --size=$SWAP    --ondisk=${MASTER} --asprimary" >> $outfile
		echo "part /         --fstype=ext4     --size=$ROOT_SIZE --ondisk=${MASTER} --asprimary --grow" >> $outfile
		echo "part /home     --fstype=ext4     --size=$SEC_Size --ondisk=${SLAVE} --grow">> $outfile
	else
		echo "# 1 Disk partitioning" >> $outfile
		echo "clearpart --all --initlabel --drives=${MASTER}" >> $outfile
		## System bootloader configuration
		echo "bootloader --append=" crashkernel=auto" --location=mbr --boot-drive=${MASTER}" >> $outfile
		echo "part /boot     --fstype=ext4     --size=$BOOTs    --ondisk=${MASTER} --asprimary" >> $outfile
		#echo "part /biosboot --fstype=biosboot --size=$BIOSBOOTs    --ondisk=${MASTER} --asprimary" >> $outfile
		echo "part swap      --fstype=swap     --size=$SWAP    --ondisk=${MASTER} --asprimary" >> $outfile
		echo "part /         --fstype=ext4     --size=$ROOTSIZE --ondisk=${MASTER} --asprimary --grow" >> $outfile
		#echo "part /home     --fstype=ext4     --size=$HOMESIZE --ondisk=${MASTER} --asprimary --grow" >> $outfile
	fi;
};
CheckDiskType() {
	disktype="default"
	disknu=0
	for t in "vd" "sd" "hd"; do
	fdisk -l|grep -E "/dev/${t}[a-z]:" >>/dev/null
	if [ $? -eq 0 ];then
		if [ `fdisk -l|grep -E "/dev/${t}[a-z]:"|wc -l` -gt 1 ]; then 
			disknu=`fdisk -l|grep -E "/dev/${t}[a-z]:"|wc -l`; echo $disknu;
		else 
			disknu=1; echo $disknu;
		fi;
		disktype="$t"; echo $disktype;
	fi;
	done;
	CreatePartFile $disktype $disknu
}
CheckDiskType
#cat $outfile
%end

%include /tmp/pre-part-include




# part pv.699 --fstype="lvmpv" --ondisk=sda --size=297046
# grow - Эта команда указывает установщику anaconda создать максимально большой раздел.
# pv.699 - не используется после установки

# part biosboot --fstype="biosboot" --ondisk=sda --size=2
# part pv.699 --fstype="lvmpv" --ondisk=sda --size=304220
# part /boot --fstype="ext4" --ondisk=sda --size=1022 --label=BOOT
# volgroup nnserver --pesize=4096 pv.699
# logvol swap  --fstype="swap" --size=8196 --name=swap --vgname=nnserver
# logvol /home  --fstype="xfs" --size=184320 --label="HOME" --name=home --vgname=nnserver
# logvol /  --fstype="xfs" --size=111700 --label="ROOT" --name=root --vgname=nnserver




################################################
####      -3. Package installation-         ####
################################################

##    -установленные / удаленные (-) пакеты-    ##
# url --url="http://mirror.mirohost.net/centos/7/os/x86_64/"
# url --url="http://centos.ip-connect.vn.ua/7/os/x86_64/"
# url --url="http://mirrors.bytes.ua/centos/7/os/x86_64/"
# url --url="https://mirror.yandex.ru/centos/7/os/x86_64/"
# repo --install --name="CentOS" --baseurl="http://mirror.centos.org/centos/7/os/x86_64/"
# repo --name="CentOS" --baseurl="https://mirror.yandex.ru/centos/7/os/x86_64/"
# repo --name="EPEL" --baseurl="https://dl.fedoraproject.org/pub/epel/7/x86_64/"
# repo -–name="EPEL" -–baseurl="http://download.fedoraproject.org/pub/epel/7/x86_64/"
# repo --install --name="ELRepo" --baseurl="http://mirror.mirohost.net/centos/7/extras/x86_64/Packages/elrepo-release-7.0-4.el7.elrepo.noarch.rpm"
# repo --install --name="ELRepo" --baseurl="http://mirror.mirohost.net/centos/7/extras/x86_64/"
# repo --install --name="EPEL" --baseurl="http://mirror.mirohost.net/centos/7/extras/x86_64/"
# repo --name="CentOS" --baseurl="http://mirror.mirohost.net/centos/7/os/x86_64/"
# repo --name="EPEL" --baseurl="https://dl.fedoraproject.org/pub/epel/7/x86_64/"
# repo -–name="EPEL" -–baseurl="http://mirror.mirohost.net/centos/7/os/x86_64/"
# repo -–name="ELRepo" -–baseurl="http://mirror.mirohost.net/centos/7/extras/x86_64/"
# repo -–name="elrepo" -–baseurl="https://elrepo.org/linux/elrepo/el7/x86_64/"

%packages
@^minimal
@core
# aide
chrony
#esc
kexec-tools
#libreswan
#openscap
#openscap-scanner
#pam_pkcs11
#scap-security-guide
# @base
# @web-server
# @^web-server-environment
# @system-admin-tools
# @php
# @debugging
# @compat-libraries
# @guest-agents
sudo

%end


## Select profile
# %addon org_fedora_oscap
#    content-type = scap-security-guide
#     profile = xccdf_org.ssgproject.content_profile_pci-dss
# %end

## KDump
%addon com_redhat_kdump --enable --reserve-mb='auto'

%end

## pwpolicy
%anaconda
pwpolicy root --minlen=6 --minquality=1 --notstrict --nochanges --notempty
pwpolicy user --minlen=6 --minquality=1 --notstrict --nochanges --emptyok
pwpolicy luks --minlen=6 --minquality=1 --notstrict --nochanges --notempty
%end

#######################
%post
# yum install -y policycoreutils-python
echo "admin ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers.d/admin

## Change ssh port
# /usr/bin/sed -i "s%#Port 22%Port 43389%g" "/etc/ssh/sshd_config"
# /usr/bin/sed -i "s%#PermitRootLogin yes%PermitRootLogin no%g" "/etc/ssh/sshd_config"
# /sbin/semanage port -a -t ssh_port_t -p tcp 22822
# /usr/bin/firewall-cmd --permanent --zone=public --remove-service=ssh
%end

## Reboot after installation
# reboot --eject 
reboot --kexec


%pre --log=/tmp/kickstart_pre.log
	echo "======== Currently mounted partitions %pre-install ========="
	echo "========== %pre --log=/tmp/kickstart_pre.log ========"
	df -Th
	echo "=================== Available memory ======================"
	free -m
	echo "#### Kickstart pre install script completed at: `date` ####"
%end


%post --log=/var/log/kickstart_post.log
	echo "============= Currently mounted partitions %post ================"
	echo "========== %post --log=/var/log/kickstart_post.log ========"
	df -Th
	echo "=================== Available memory ======================"
	free -m
	echo "#### Kickstart post install script completed at: `date` ####"
%end


%pre-install --log=/tmp/kickstart_pre_install.log
	echo "======== Currently mounted partitions %pre-install ========="
	echo "========== %pre-install --log=/tmp/kickstart_pre_install.log ========"
	df -Th
	echo "=================== Available memory ======================"
	free -m
	echo "#### Kickstart pre install script completed at: `date` ####"
%end


#%include /run/install/repo/pre-part-include
#%include /run/install/repo/tmp-prtnew
#%include /run/install/repo/tmp-twodrive

%pre --interpreter=/usr/bin/bash --log=/tmp/kickstart_bash_pre.log
	echo "This is a sample bash script called at %pre stage"
%end





#####################################################
##******************** INFO ********************##
#* rootpw —lock   # — запрет подключения к серверу root-ом
#-$ python -c 'import crypt; print(crypt.crypt("My Password", "$6$My Salt"))'
#*
#* Пароль пользователя root и админ можно сгенерировать заранее";
#* 
#* read -p "Enter password: " PASSW; python -c "import crypt,random,string; print crypt.crypt(\"$PASSW\", '\$6\$' + ''.join([random.choice(string.ascii_letters + string.digits) for _ in range(16)]))" ;
#> Enter password: YuNiZu!)Now!(88
#> $6$ejBGsMZZVTKPgjBZ$V02VkVY9lRNYzuNEOXZjq2.86diIOPIE.hCzA2VQ238GMsE17wht1FKjjY26pFEE2mGDVknUVXG5VTwJTgb7C.
#> Enter password: 23121991
#> $6$ccd3OFPZW6MarUFf$pg9ItdYw8n3vdAf2o3DHOGcPY6V6yolcJzB0fC6NptrGHhc7wMWaqUWTmOX9lFEy2eg/q1eHKteJ5MP7S78dw1

##******************** INFO ********************##
